// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: poSKmt1KMDoYUF6h3Y78GP
// Component: S1tKN1eDywa13q

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header3 from "../../Header3"; // plasmic-import: 5VQg_KfaOv11TI/component
import Header2 from "../../Header2"; // plasmic-import: hz3fKOWkD_JODa/component
import ProductCard from "../../ProductCard"; // plasmic-import: I9bSXDVKP-_xia/component
import Ratings from "../../Ratings"; // plasmic-import: RJoD3U13gzPVxR/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: 6yeDc8BOoSwsCq/component
import BlogPost from "../../BlogPost"; // plasmic-import: XtW6OFg7bRL4Bi/component
import Footer from "../../Footer"; // plasmic-import: d3WHbEehslF7mk/component
import ProductRow from "../../ProductRow"; // plasmic-import: FaWqiAMedvRmIf/component

import { useScreenVariants as useScreenVariantsgW35LCmK5FyoDz } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gW35LCmK5FYODz/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_paradosiaki_agiografia.module.css"; // plasmic-import: poSKmt1KMDoYUF6h3Y78GP/projectcss
import sty from "./PlasmicSinglePage.module.css"; // plasmic-import: S1tKN1eDywa13q/css

import LeftArrowSvgrepoComsvgIcon from "./icons/PlasmicIcon__LeftArrowSvgrepoComsvg"; // plasmic-import: Xir3yn2VH_uHRD/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: -xYff7-eV79M4G/icon
import header5JpgTkndCuxgFa0WO0 from "./images/header5Jpg.jpg"; // plasmic-import: tkndCUXGFa0wO0/picture
import plant6LgwebpSf4R5M98MShYnh from "./images/plant6Lgwebp.webp"; // plasmic-import: SF4R5m98mSHYnh/picture
import galinaNMiziNqvJx5MUnsplashjpgOj5FljDOxLgsNc from "./images/galinaNMiziNqvJx5MUnsplashjpg.jpg"; // plasmic-import: Oj5FljDOxLgsNC/picture
import igorSonFvPxCqgtwcUnsplashjpgDCWmzzZg7Jm1Ma from "./images/igorSonFvPxCqgtwcUnsplashjpg.jpg"; // plasmic-import: dCWmzzZg7Jm1MA/picture
import scottWebbORwRlTgBrPoUnsplashjpgK9B4Oe5CUewWz9 from "./images/scottWebbORwRlTgBrPoUnsplashjpg.jpg"; // plasmic-import: K9b4OE5CUewWZ9/picture
import freddieMarriageUcfKyTanLuUnsplashjpgSBkLuiwh6WxZe from "./images/freddieMarriageUcfKyTanLuUnsplashjpg.jpg"; // plasmic-import: SBkLuiwh-6wxZe/picture
import f18160GiZtf60VRv from "./images/f1.jpg"; // plasmic-import: 8160giZTF60vRV/picture
import f2HWMyZlVdy36Uxv from "./images/f2.jpg"; // plasmic-import: hWMyZLVdy36Uxv/picture
import f3CyKtk6OS2HjTfn from "./images/f3.jpg"; // plasmic-import: CyKTK6oS2HjTFN/picture
import f4MJjaldZdX2J0Ba from "./images/f4.jpg"; // plasmic-import: MJjaldZdX2J0Ba/picture
import b1ElV8NLvtMmEbJk from "./images/b1.jpg"; // plasmic-import: ElV8nLvtMMEbJk/picture
import b2CiXwhWWe0BHWc5 from "./images/b2.jpg"; // plasmic-import: CIXwhWWe0bHWc5/picture
import b3C6EpQzQg4ZOkm from "./images/b3.jpg"; // plasmic-import: c-6epQZQg4ZOkm/picture
import adidasNarnke4I0KdH from "./images/adidas.png"; // plasmic-import: NARNKE4_I0KD_H/picture
import hmZLzhFken3EtDtf from "./images/hm.png"; // plasmic-import: zLZHFken3etDtf/picture
import kappa1JEXpQ77XoIuTh from "./images/kappa.png"; // plasmic-import: 1jEXpQ77xoIuTh/picture
import lacosteJi0LZ1593W10 from "./images/lacoste.png"; // plasmic-import: Ji0l_z159-3W10/picture
import levisR9MIrqDlMzqOq from "./images/levis.png"; // plasmic-import: r9mIrqDLMzq_oq/picture
import plant6JpgWscOmZag54Ygk from "./images/plant6Jpg.png"; // plasmic-import: wscOmZag_54YGK/picture
import plant1JpgT9Rz1ZiHhgDik from "./images/plant1Jpg.png"; // plasmic-import: t9RZ-1ziHHGDik/picture
import plant7JpgBapkTOSzUsAln from "./images/plant7Jpg.png"; // plasmic-import: BapkT_oSZUsALN/picture
import plant5JpgY5X95TDvn16Wtz from "./images/plant5Jpg.png"; // plasmic-import: Y5X95tDvn16wtz/picture
import plant41JpgGhCna01Pikt27V from "./images/plant41Jpg.png"; // plasmic-import: GHCna01pikt27v/picture
import plant31JpgYiWvMu6GjIxaZu from "./images/plant31Jpg.png"; // plasmic-import: YiWvMu6GJIxaZu/picture
import plant9WebpSeXEy1AwzRls23 from "./images/plant9Webp.webp"; // plasmic-import: SeXEy1AwzRLS23/picture
import plant2Webp1FKgifHZnE3XC from "./images/plant2Webp.webp"; // plasmic-import: 1FKgifHZnE3x-C/picture

export type PlasmicSinglePage__VariantMembers = {};
export type PlasmicSinglePage__VariantsArgs = {};
type VariantPropType = keyof PlasmicSinglePage__VariantsArgs;
export const PlasmicSinglePage__VariantProps = new Array<VariantPropType>();

export type PlasmicSinglePage__ArgsType = {};
type ArgPropType = keyof PlasmicSinglePage__ArgsType;
export const PlasmicSinglePage__ArgProps = new Array<ArgPropType>();

export type PlasmicSinglePage__OverridesType = {
  root?: p.Flex<"div">;
  header3?: p.Flex<typeof Header3>;
  foreground2?: p.Flex<"div">;
  h3?: p.Flex<"h3">;
  header?: p.Flex<"div">;
  header2?: p.Flex<typeof Header2>;
  featureItem?: p.Flex<typeof FeatureItem>;
  bigPlants?: p.Flex<"div">;
  cactuses?: p.Flex<"div">;
  bestSellers?: p.Flex<"div">;
  productRow?: p.Flex<typeof ProductRow>;
};

export interface DefaultSinglePageProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicSinglePage__RenderFunc(props: {
  variants: PlasmicSinglePage__VariantsArgs;
  args: PlasmicSinglePage__ArgsType;
  overrides: PlasmicSinglePage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgW35LCmK5FyoDz()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox___8ZXfd)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__pcxnR)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobile") ? true : true
                  ) ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__phkiL)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"35%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: header5JpgTkndCuxgFa0WO0,
                        fullWidth: 502,
                        fullHeight: 872,
                        aspectRatio: undefined
                      }}
                    />
                  ) : null}
                  <Header3
                    data-plasmic-name={"header3"}
                    data-plasmic-override={overrides.header3}
                    className={classNames("__wab_instance", sty.header3)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__aeYwp)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobile")
                        ? true
                        : true
                    ) ? (
                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__bEwHs
                        )}
                      >
                        <LeftArrowSvgrepoComsvgIcon
                          className={classNames(projectcss.all, sty.svg__qOoj)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__slZ3B
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "see all products"
                            : "see all products"}
                        </div>
                      </p.Stack>
                    ) : null}
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"foreground2"}
                      data-plasmic-override={overrides.foreground2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.foreground2)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.columns___1OqMv
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__nn4De
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__mp8Kf)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: plant6LgwebpSf4R5M98MShYnh,
                              fullWidth: 900,
                              fullHeight: 900,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__s52V
                          )}
                        >
                          <h3
                            data-plasmic-name={"h3"}
                            data-plasmic-override={overrides.h3}
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3
                            )}
                          >
                            {"Donec finibus"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wXcDb
                            )}
                          >
                            {"big plants"}
                          </div>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___4Qsol
                            )}
                          >
                            {"$100.00"}
                          </h5>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__z83Of
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__y1Iuf
                              )}
                            >
                              {"Cras molestie faucibus ipsum ut vulputate."}
                            </div>
                            {(
                              hasVariant(globalVariants, "screen", "mobile")
                                ? true
                                : true
                            ) ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__bQgxo
                                )}
                              >
                                {(
                                  hasVariant(globalVariants, "screen", "mobile")
                                    ? true
                                    : true
                                ) ? (
                                  <p.Stack
                                    as={"a"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      sty.link__tOHc8
                                    )}
                                  >
                                    <Icon3Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__dpBw9
                                      )}
                                      role={"img"}
                                    />

                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__yM0Ti
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "mobile"
                                      )
                                        ? "Discover"
                                        : "Add to cart"}
                                    </div>
                                  </p.Stack>
                                ) : null}
                              </div>
                            ) : null}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </div>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__i5XkR)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__jfzl1)}>
                  {true ? (
                    <Header2
                      data-plasmic-name={"header2"}
                      data-plasmic-override={overrides.header2}
                      className={classNames("__wab_instance", sty.header2)}
                    />
                  ) : null}
                </div>
              </p.Stack>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__bc8Kp)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__hr4Hd
                    )}
                  >
                    {"Top Collections"}
                  </h2>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__ctqUv)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__kuxPy)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__ozvd0
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__wjiIv)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: galinaNMiziNqvJx5MUnsplashjpgOj5FljDOxLgsNc,
                            fullWidth: 1920,
                            fullHeight: 1278,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$65.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__cxSdC
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__xmEn)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__oBvlg
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___6XBy)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: igorSonFvPxCqgtwcUnsplashjpgDCWmzzZg7Jm1Ma,
                            fullWidth: 640,
                            fullHeight: 481,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$80.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__elJh8
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__l5X7K)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__zTz7Q
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__r9Pm0)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: scottWebbORwRlTgBrPoUnsplashjpgK9B4Oe5CUewWz9,
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$40.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___0QOgM
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__pqqle)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__pRXg
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__nqFAv)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: freddieMarriageUcfKyTanLuUnsplashjpgSBkLuiwh6WxZe,
                            fullWidth: 640,
                            fullHeight: 427,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__jOagC
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <FeatureItem
                  data-plasmic-name={"featureItem"}
                  data-plasmic-override={overrides.featureItem}
                  className={classNames("__wab_instance", sty.featureItem)}
                />
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__ylXkL)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xDPe6
                    )}
                  >
                    {"Featured Products"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___7A1Jk)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___0Hgoo)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__kdsv8
                      )}
                      price={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aUJwz
                          )}
                        >
                          {"$160.00"}
                        </div>
                      }
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__cowa7
                          )}
                          numReviews={"(12 Review)"}
                          stars={"two" as const}
                        />
                      }
                      title={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__atb5L
                          )}
                        >
                          {"Designed Sofa"}
                        </div>
                      }
                      withReviews={true}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___5CPf)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__ifqqx
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__nc3Fe)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f2HWMyZlVdy36Uxv,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$200.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__wTqT6
                          )}
                          stars={"four" as const}
                        />
                      }
                      title={"Dining Table"}
                      withReviews={true}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__zbtz6)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__ghgn
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__rftS3)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f3CyKtk6OS2HjTfn,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__enHcI
                          )}
                          numReviews={"(23 Review)"}
                          stars={"five" as const}
                        />
                      }
                      title={"Chair and Table"}
                      withReviews={true}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__gVwb)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__ocyOx
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___0T3Hn)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f4MJjaldZdX2J0Ba,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$299.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__qfD7L
                          )}
                          numReviews={"(35 Review)"}
                        />
                      }
                      title={"Modern Arm Chair"}
                      withReviews={true}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__vFhI1)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yjs8L
                    )}
                  >
                    {"Latest Blog"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__azSr4)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__kc41W)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__wVuw6
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__uSmg9)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b1ElV8NLvtMmEbJk,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ntXuI)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__huK2F
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__izf6Y)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b2CiXwhWWe0BHWc5,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__c89MA)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__dcYjm
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oXjG)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b3C6EpQzQg4ZOkm,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uvNGd)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___8HyCu)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"90px" as const}
                    src={{
                      src: adidasNarnke4I0KdH,
                      fullWidth: 90,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__vXx2Z)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"91px" as const}
                    src={{
                      src: hmZLzhFken3EtDtf,
                      fullWidth: 91,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___7Gr7P)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"98px" as const}
                    src={{
                      src: kappa1JEXpQ77XoIuTh,
                      fullWidth: 98,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uDzn4)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"124px" as const}
                    src={{
                      src: lacosteJi0LZ1593W10,
                      fullWidth: 124,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uOqtS)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"125px" as const}
                    src={{
                      src: levisR9MIrqDlMzqOq,
                      fullWidth: 125,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
              {true ? (
                <Footer
                  className={classNames("__wab_instance", sty.footer___5Xnff)}
                />
              ) : null}
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qoyx9)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__myzJo
                    )}
                  >
                    {"Big plants"}
                  </h2>
                </p.Stack>
              ) : null}
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__nxS74)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__jvRdI)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__vRfI9)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant6JpgWscOmZag54Ygk,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__huFx1)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__wjfdv)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__roYOf)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__h5WqP
                      )}
                    >
                      {"Donec finibus"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__alnjg
                      )}
                    >
                      {"bigplants"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__m2M7R
                      )}
                    >
                      {"$100.00"}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__wtk2M)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__hhr8B)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant1JpgT9Rz1ZiHhgDik,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nhg9S)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__hSzdB)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nuWgd)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__frb
                      )}
                    >
                      {"Nulla suscipit"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cQuXr
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__lZ7LG
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__gqETa)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___7Z2E)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant7JpgBapkTOSzUsAln,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__t3Bfh)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__aQaC0)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7YdhP)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__i5Vg
                      )}
                    >
                      {"Sed consectetur"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__u3JEr
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__yJQz7
                      )}
                    >
                      {"$18.40 "}
                    </h5>
                  </div>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__tzKj)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant5JpgY5X95TDvn16Wtz,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__kyOnA)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__yxGAx)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__homHv)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__gGuky
                      )}
                    >
                      {"Vestibulum eget"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vDdij
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__snEox
                      )}
                    >
                      {"$220.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___2F8ID)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__laWct
                    )}
                  >
                    {"Cactuses"}
                  </h2>
                </p.Stack>
              ) : null}
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__btk0O)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__e7IV)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cjirJ)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant41JpgGhCna01Pikt27V,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__o9Dqt)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__yHnk)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sSJdt)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___5YfIh
                      )}
                    >
                      {"Cras molestie"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__b3N7E
                      )}
                    >
                      {"cactuses "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__aS1KM
                      )}
                    >
                      {"$24.99"}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__hLh7)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cd7T8)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant31JpgYiWvMu6GjIxaZu,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cmjB3)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__ulbl6)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ddGd6)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__bZlwo
                      )}
                    >
                      {"Curabitur eu tempor"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7NrJl
                      )}
                    >
                      {"Cactuses"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__pAn16
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__ciBtF)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___69Lp5)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant9WebpSeXEy1AwzRls23,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__atDb5)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__thCmf)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__uVao6)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__fyhwE
                      )}
                    >
                      {"Fusce sagittis"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wDxN8
                      )}
                    >
                      {"Fusce sagittis"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__fEoA
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__vOiWe)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__d2103)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant2Webp1FKgifHZnE3XC,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cGh1D)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__axcru)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ok03D)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__bVdA
                      )}
                    >
                      {"Integer porta"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sUkO8
                      )}
                    >
                      {"Cactuses"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__cDlld
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          <p.Stack
            as={"div"}
            data-plasmic-name={"bestSellers"}
            data-plasmic-override={overrides.bestSellers}
            hasGap={true}
            className={classNames(projectcss.all, sty.bestSellers)}
          >
            {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lqCep)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__oe1Ga
                  )}
                >
                  {"Related"}
                </h2>
              </p.Stack>
            ) : null}
            {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
              <ProductRow
                data-plasmic-name={"productRow"}
                data-plasmic-override={overrides.productRow}
                className={classNames("__wab_instance", sty.productRow)}
              />
            ) : null}
          </p.Stack>
          <Footer className={classNames("__wab_instance", sty.footer__r5Oxt)} />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header3",
    "foreground2",
    "h3",
    "header",
    "header2",
    "featureItem",
    "bigPlants",
    "cactuses",
    "bestSellers",
    "productRow"
  ],
  header3: ["header3"],
  foreground2: ["foreground2", "h3"],
  h3: ["h3"],
  header: ["header", "header2", "featureItem"],
  header2: ["header2"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  bestSellers: ["bestSellers", "productRow"],
  productRow: ["productRow"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header3: typeof Header3;
  foreground2: "div";
  h3: "h3";
  header: "div";
  header2: typeof Header2;
  featureItem: typeof FeatureItem;
  bigPlants: "div";
  cactuses: "div";
  bestSellers: "div";
  productRow: typeof ProductRow;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSinglePage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSinglePage__VariantsArgs;
    args?: PlasmicSinglePage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSinglePage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicSinglePage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicSinglePage__ArgProps,
          internalVariantPropNames: PlasmicSinglePage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSinglePage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSinglePage";
  } else {
    func.displayName = `PlasmicSinglePage.${nodeName}`;
  }
  return func;
}

export const PlasmicSinglePage = Object.assign(
  // Top-level PlasmicSinglePage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header3: makeNodeComponent("header3"),
    foreground2: makeNodeComponent("foreground2"),
    h3: makeNodeComponent("h3"),
    header: makeNodeComponent("header"),
    header2: makeNodeComponent("header2"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    bestSellers: makeNodeComponent("bestSellers"),
    productRow: makeNodeComponent("productRow"),

    // Metadata about props expected for PlasmicSinglePage
    internalVariantProps: PlasmicSinglePage__VariantProps,
    internalArgProps: PlasmicSinglePage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicSinglePage;
/* prettier-ignore-end */
