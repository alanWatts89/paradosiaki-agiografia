// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: poSKmt1KMDoYUF6h3Y78GP
// Component: qPy7G3cEouv854

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header2 from "../../Header2"; // plasmic-import: hz3fKOWkD_JODa/component
import ProductCard from "../../ProductCard"; // plasmic-import: I9bSXDVKP-_xia/component
import Ratings from "../../Ratings"; // plasmic-import: RJoD3U13gzPVxR/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: 6yeDc8BOoSwsCq/component
import BlogPost from "../../BlogPost"; // plasmic-import: XtW6OFg7bRL4Bi/component
import Footer from "../../Footer"; // plasmic-import: d3WHbEehslF7mk/component
import MenuButton from "../../MenuButton"; // plasmic-import: 3IYrK-BAkdyFM-/component

import { useScreenVariants as useScreenVariantsgW35LCmK5FyoDz } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gW35LCmK5FYODz/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_paradosiaki_agiografia.module.css"; // plasmic-import: poSKmt1KMDoYUF6h3Y78GP/projectcss
import sty from "./PlasmicFaq.module.css"; // plasmic-import: qPy7G3cEouv854/css

import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: -xYff7-eV79M4G/icon
import DotSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__DotSvgrepoCom1Svg"; // plasmic-import: 5vdIMDqkJMyTrx/icon
import LocationSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__LocationSvgrepoCom1Svg"; // plasmic-import: QiUB2iFrqDBwwz/icon
import LogoWhitesvgIcon from "./icons/PlasmicIcon__LogoWhitesvg"; // plasmic-import: _Lzag9I0QwGeoY/icon
import galinaNMiziNqvJx5MUnsplashjpgOj5FljDOxLgsNc from "./images/galinaNMiziNqvJx5MUnsplashjpg.jpg"; // plasmic-import: Oj5FljDOxLgsNC/picture
import igorSonFvPxCqgtwcUnsplashjpgDCWmzzZg7Jm1Ma from "./images/igorSonFvPxCqgtwcUnsplashjpg.jpg"; // plasmic-import: dCWmzzZg7Jm1MA/picture
import scottWebbORwRlTgBrPoUnsplashjpgK9B4Oe5CUewWz9 from "./images/scottWebbORwRlTgBrPoUnsplashjpg.jpg"; // plasmic-import: K9b4OE5CUewWZ9/picture
import freddieMarriageUcfKyTanLuUnsplashjpgSBkLuiwh6WxZe from "./images/freddieMarriageUcfKyTanLuUnsplashjpg.jpg"; // plasmic-import: SBkLuiwh-6wxZe/picture
import f18160GiZtf60VRv from "./images/f1.jpg"; // plasmic-import: 8160giZTF60vRV/picture
import f2HWMyZlVdy36Uxv from "./images/f2.jpg"; // plasmic-import: hWMyZLVdy36Uxv/picture
import f3CyKtk6OS2HjTfn from "./images/f3.jpg"; // plasmic-import: CyKTK6oS2HjTFN/picture
import f4MJjaldZdX2J0Ba from "./images/f4.jpg"; // plasmic-import: MJjaldZdX2J0Ba/picture
import b1ElV8NLvtMmEbJk from "./images/b1.jpg"; // plasmic-import: ElV8nLvtMMEbJk/picture
import b2CiXwhWWe0BHWc5 from "./images/b2.jpg"; // plasmic-import: CIXwhWWe0bHWc5/picture
import b3C6EpQzQg4ZOkm from "./images/b3.jpg"; // plasmic-import: c-6epQZQg4ZOkm/picture
import adidasNarnke4I0KdH from "./images/adidas.png"; // plasmic-import: NARNKE4_I0KD_H/picture
import hmZLzhFken3EtDtf from "./images/hm.png"; // plasmic-import: zLZHFken3etDtf/picture
import kappa1JEXpQ77XoIuTh from "./images/kappa.png"; // plasmic-import: 1jEXpQ77xoIuTh/picture
import lacosteJi0LZ1593W10 from "./images/lacoste.png"; // plasmic-import: Ji0l_z159-3W10/picture
import levisR9MIrqDlMzqOq from "./images/levis.png"; // plasmic-import: r9mIrqDLMzq_oq/picture
import plant6JpgWscOmZag54Ygk from "./images/plant6Jpg.png"; // plasmic-import: wscOmZag_54YGK/picture
import plant1JpgT9Rz1ZiHhgDik from "./images/plant1Jpg.png"; // plasmic-import: t9RZ-1ziHHGDik/picture
import plant7JpgBapkTOSzUsAln from "./images/plant7Jpg.png"; // plasmic-import: BapkT_oSZUsALN/picture
import plant5JpgY5X95TDvn16Wtz from "./images/plant5Jpg.png"; // plasmic-import: Y5X95tDvn16wtz/picture
import plant41JpgGhCna01Pikt27V from "./images/plant41Jpg.png"; // plasmic-import: GHCna01pikt27v/picture
import plant31JpgYiWvMu6GjIxaZu from "./images/plant31Jpg.png"; // plasmic-import: YiWvMu6GJIxaZu/picture
import plant9WebpSeXEy1AwzRls23 from "./images/plant9Webp.webp"; // plasmic-import: SeXEy1AwzRLS23/picture
import plant2Webp1FKgifHZnE3XC from "./images/plant2Webp.webp"; // plasmic-import: 1FKgifHZnE3x-C/picture
import promowebpSLwZ7MBgKpEthv from "./images/promowebp.webp"; // plasmic-import: sLwZ7MBgKpETHV/picture

export type PlasmicFaq__VariantMembers = {};
export type PlasmicFaq__VariantsArgs = {};
type VariantPropType = keyof PlasmicFaq__VariantsArgs;
export const PlasmicFaq__VariantProps = new Array<VariantPropType>();

export type PlasmicFaq__ArgsType = {};
type ArgPropType = keyof PlasmicFaq__ArgsType;
export const PlasmicFaq__ArgProps = new Array<ArgPropType>();

export type PlasmicFaq__OverridesType = {
  root?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  header?: p.Flex<"div">;
  featureItem?: p.Flex<typeof FeatureItem>;
  bigPlants?: p.Flex<"div">;
  cactuses?: p.Flex<"div">;
  menuButton?: p.Flex<typeof MenuButton>;
};

export interface DefaultFaqProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicFaq__RenderFunc(props: {
  variants: PlasmicFaq__VariantsArgs;
  args: PlasmicFaq__ArgsType;
  overrides: PlasmicFaq__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgW35LCmK5FyoDz()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox___2TeWv)}>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <Header2
                  className={classNames("__wab_instance", sty.header2__nkyEu)}
                />
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__qlTGd)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground2"}
                  data-plasmic-override={overrides.foreground2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground2)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xHPc5)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__jtEgu
                      )}
                    >
                      {"Behold our FAQ"}
                    </h1>
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jQt33
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xwVwO
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                            : "All right, friends. Letâ€™s do this. This section will cover basic, frequently asked questions for e-commerce merchants."}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ph0Pz)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__maKxB)}>
                  {true ? (
                    <Header2
                      className={classNames(
                        "__wab_instance",
                        sty.header2__pv8Pj
                      )}
                    />
                  ) : null}
                </div>
              </p.Stack>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__vzQxa)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__vXeAl
                    )}
                  >
                    {"Top Collections"}
                  </h2>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___3BJjT)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__qkMQe)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__gGbIy
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__rlOsz)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: galinaNMiziNqvJx5MUnsplashjpgOj5FljDOxLgsNc,
                            fullWidth: 1920,
                            fullHeight: 1278,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$65.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__myQz
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__veox)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__tp72U
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__i3Ek)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: igorSonFvPxCqgtwcUnsplashjpgDCWmzzZg7Jm1Ma,
                            fullWidth: 640,
                            fullHeight: 481,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$80.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___5Jb9Z
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__bEg2L)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___7HpoG
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__aCv0)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: scottWebbORwRlTgBrPoUnsplashjpgK9B4Oe5CUewWz9,
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$40.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__bI5PM
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___32Djb)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__lIzug
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ejChu)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: freddieMarriageUcfKyTanLuUnsplashjpgSBkLuiwh6WxZe,
                            fullWidth: 640,
                            fullHeight: 427,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__ymtO
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <FeatureItem
                  data-plasmic-name={"featureItem"}
                  data-plasmic-override={overrides.featureItem}
                  className={classNames("__wab_instance", sty.featureItem)}
                />
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__bcOZt)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mEejr
                    )}
                  >
                    {"Featured Products"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__qBiJo)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__ysRYn)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__p7L42
                      )}
                      price={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f9D14
                          )}
                        >
                          {"$160.00"}
                        </div>
                      }
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__a96K9
                          )}
                          numReviews={"(12 Review)"}
                          stars={"two" as const}
                        />
                      }
                      title={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tiqbo
                          )}
                        >
                          {"Designed Sofa"}
                        </div>
                      }
                      withReviews={true}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__npLsu)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__rudtE
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__zDgfU)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f2HWMyZlVdy36Uxv,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$200.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___4Pwt8
                          )}
                          stars={"four" as const}
                        />
                      }
                      title={"Dining Table"}
                      withReviews={true}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__g1Ibg)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___3WK1G
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__gblS8)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f3CyKtk6OS2HjTfn,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__lsrsK
                          )}
                          numReviews={"(23 Review)"}
                          stars={"five" as const}
                        />
                      }
                      title={"Chair and Table"}
                      withReviews={true}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___8Wk7Q)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__wQCgn
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__sIuIx)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: f4MJjaldZdX2J0Ba,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$299.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__cjQ0G
                          )}
                          numReviews={"(35 Review)"}
                        />
                      }
                      title={"Modern Arm Chair"}
                      withReviews={true}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__xDg88)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uguFb
                    )}
                  >
                    {"Latest Blog"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__bjAx)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___2P6Fl)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__oz5K
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___1Jy4L)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b1ElV8NLvtMmEbJk,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ba0Kc)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost___5FljV
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__afZka)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b2CiXwhWWe0BHWc5,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__hPsd1)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__sx19I
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__sJr1Q)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: b3C6EpQzQg4ZOkm,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iHeVo)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___3Xi1M)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"90px" as const}
                    src={{
                      src: adidasNarnke4I0KdH,
                      fullWidth: 90,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ewOz)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"91px" as const}
                    src={{
                      src: hmZLzhFken3EtDtf,
                      fullWidth: 91,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__b1LHt)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"98px" as const}
                    src={{
                      src: kappa1JEXpQ77XoIuTh,
                      fullWidth: 98,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___18Gyx)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"124px" as const}
                    src={{
                      src: lacosteJi0LZ1593W10,
                      fullWidth: 124,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__nTrNc)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"125px" as const}
                    src={{
                      src: levisR9MIrqDlMzqOq,
                      fullWidth: 125,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
              {true ? (
                <Footer
                  className={classNames("__wab_instance", sty.footer__pkNt3)}
                />
              ) : null}
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___471Sd)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__v0F4K
                    )}
                  >
                    {"Big plants"}
                  </h2>
                </p.Stack>
              ) : null}
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__mgIaf)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__hq2Vk)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uUpjU)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant6JpgWscOmZag54Ygk,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zyt0W)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__gqo57)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lZb8S)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__fEcj
                      )}
                    >
                      {"Donec finibus"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dzAdU
                      )}
                    >
                      {"bigplants"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___9FYkv
                      )}
                    >
                      {"$100.00"}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__lgSdQ)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fziOl)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant1JpgT9Rz1ZiHhgDik,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uJpqK)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__afHjO)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1Xuak)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__ymSwk
                      )}
                    >
                      {"Nulla suscipit"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uhgdw
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__d4Yly
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__g6OfV)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__dRq28)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant7JpgBapkTOSzUsAln,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hMs4M)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__aTEnr)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__j7JUh)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__guc7G
                      )}
                    >
                      {"Sed consectetur"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vgzPq
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__gk5YD
                      )}
                    >
                      {"$18.40 "}
                    </h5>
                  </div>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__majDs)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant5JpgY5X95TDvn16Wtz,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__sP4S)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__qGtSy)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vHyx9)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__dy6BW
                      )}
                    >
                      {"Vestibulum eget"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mDaP
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__q6Xd1
                      )}
                    >
                      {"$220.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hDja)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___1Qsth
                    )}
                  >
                    {"Cactuses"}
                  </h2>
                </p.Stack>
              ) : null}
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__yq1Cf)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__xappl)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___29RTd)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant41JpgGhCna01Pikt27V,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uU0Da)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg___719J)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__r2ZiJ)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__aEm56
                      )}
                    >
                      {"Cras molestie"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hhmLt
                      )}
                    >
                      {"cactuses "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__xQHwY
                      )}
                    >
                      {"$24.99"}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___2HySl)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___9UwoU)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant31JpgYiWvMu6GjIxaZu,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox___8YE)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__ibvJz)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__notxs)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__dupd
                      )}
                    >
                      {"Curabitur eu tempor"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sASuq
                      )}
                    >
                      {"Cactuses"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__zYdX
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___6Jg10)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__yIOsG)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant9WebpSeXEy1AwzRls23,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zty1I)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__cmyWl)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7Ew5F)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__bvyLa
                      )}
                    >
                      {"Fusce sagittis"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oDf
                      )}
                    >
                      {"Fusce sagittis"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__pUucM
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__i9BVw)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pKqM)}
                    displayHeight={
                      "270px /* plasmic-token: PE1QFaZ5ZFDg60 */" as const
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: plant2Webp1FKgifHZnE3XC,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__j6F3I)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__nipLa)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tZ61J)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__fg0M6
                      )}
                    >
                      {"Integer porta"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q1Tct
                      )}
                    >
                      {"Cactuses"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__veJ93
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox___2JhkI)}>
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__x93YT)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__jzCuI
                    )}
                  >
                    {"How long does shipping take?"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bkTsC
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "Now thatâ€™s a frequent one all right, ainâ€™t it? Your answer to this should manage customer expectations. Just like a good checkout flow should. Tell them the truth"}
                  </div>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jJpXd)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__g3W04
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mqjT2
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9It1
                            )}
                          >
                            {
                              "US shipping will take between 3 to 5 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rbYPf
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___3Bnm0
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oMsBf
                            )}
                          >
                            {
                              "International shipping will take between 5 and 10 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jAjr4
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dU4Wd
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ni0YQ
                            )}
                          >
                            {
                              "Mars shipping will be automatically redirected to Elon Muskâ€™s Twitter account."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__dFykC)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4___9Nigs
                    )}
                  >
                    {"How do refunds and returns work?"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wyAq
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "It happens. Even the most beautiful of plants will disappoint someone. Again, tell it like it is:"}
                  </div>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox___2V3A)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fO6C
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__zjfOi
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__btk0K
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kX5R
                                )}
                              >
                                {"All discounted items sales are final."}
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___3M2Ia
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__qr5Z3
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__q9IhI
                                )}
                              >
                                {
                                  "If youâ€™d like another version of your item, please use the return label. Instructions are printed on its back."
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__kbJ8M
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__pTkZw
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__zz8Jg
                                )}
                              >
                                {
                                  "If your item is damaged or not functioning correctly, email us at info@planty.com, and weâ€™ll refund you + send you a new one ASAP!"
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__z3UJy)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__asauv
                    )}
                  >
                    {"Rapid-fire questions"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wkjTp
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cCHtJ)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__waUu
                    )}
                  >
                    {"How do you handle sensitive customer information?"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__x2VaX
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2I4Lc
                      )}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__q5U8Y
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hh2Qp
                            )}
                          >
                            {"Q: Why is this Planty theme so beautiful?"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__elWzz
                            )}
                          >
                            {
                              "A: We hired our first designer a couple of months ago."
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nni5
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__memEn
                            )}
                          >
                            {"Q: Why did you build a theme for Stackbit?"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4Mxv
                            )}
                          >
                            {
                              "A: We believe in Stackbitâ€™s promise of opening up the JAMstack to more developers. Plus, we trust these folks.\n Read more about Stackbit"
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dhzFn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cxk0O
                            )}
                          >
                            {"Q: How many people work at Snipcart? "}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hHmPj
                            )}
                          >
                            {
                              "A: Not a lot! Weâ€™re a small, bootstrapped team of eight human beings. Michael might be a robot, though. "
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lbfu
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jD0Y
                            )}
                          >
                            {"Q: Why is Snipcart based in QuÃ©bec City?"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__l4IUb
                            )}
                          >
                            {"A: Have you been here? Itâ€™s beaaautiful!"}
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__r1KKe
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1QPke
                            )}
                          >
                            {"Q: Whatâ€™s the meaning of life? "}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__g8LXb
                            )}
                          >
                            {
                              "A: Weâ€™re not quite sure. But building useful products with people we love feels meaningful enough."
                            }
                          </div>
                        </div>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <Footer
              className={classNames("__wab_instance", sty.footer__qDfJl)}
            />
          ) : null}
          <div className={classNames(projectcss.all, sty.freeBox__b3O4)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___5Ul1)}>
                <div className={classNames(projectcss.all, sty.columns__tiGrO)}>
                  <div
                    className={classNames(projectcss.all, sty.column__ui62B)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__rVdkd)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("562px" as const)
                          : ("562px" as const)
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("100%" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("947px" as const)
                          : ("947px" as const)
                      }
                      loading={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("lazy" as const)
                          : ("lazy" as const)
                      }
                      src={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? {
                              src: promowebpSLwZ7MBgKpEthv,
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                          : {
                              src: promowebpSLwZ7MBgKpEthv,
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                      }
                    />
                  </div>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__jbEr2)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__ew3Ep
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Behold our FAQ"
                        : "Still have questions?\nContact us. "}
                    </h1>
                    <div
                      className={classNames(projectcss.all, sty.columns__dhHkk)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column__obmMd
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7U5Vs
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "226 rue St-Joseph E, \nQuÃ©bec, QC, Canada, \nG1K 3A9"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7PhWl
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "+1-202-555-0112"}
                        </div>
                      </p.Stack>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column__zgek1
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ft2WK
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "geeks@snipcart.com"}
                        </div>
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jOoEw
                            )}
                          >
                            {(
                              hasVariant(globalVariants, "screen", "mobile")
                                ? true
                                : true
                            ) ? (
                              <p.Stack
                                as={"a"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  sty.link__mlXQy
                                )}
                              >
                                <LocationSvgrepoCom1SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___19C6Z
                                  )}
                                  role={"img"}
                                />

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___15BV
                                  )}
                                >
                                  {hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? "Discover"
                                    : "On the map"}
                                </div>
                              </p.Stack>
                            ) : null}
                          </div>
                        ) : null}
                      </p.Stack>
                    </div>
                  </p.Stack>
                </div>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__hnAgF)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kkXq)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__cxClw)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qCVew
                        )}
                      >
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <MenuButton
                            data-plasmic-name={"menuButton"}
                            data-plasmic-override={overrides.menuButton}
                            className={classNames(
                              "__wab_instance",
                              sty.menuButton
                            )}
                          />
                        ) : null}
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___4HzI7
                            )}
                          >
                            <p.PlasmicIcon
                              PlasmicIconType={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? LogoWhitesvgIcon
                                  : LogoWhitesvgIcon
                              }
                              className={classNames(
                                projectcss.all,
                                sty.svg__zgLH
                              )}
                              role={"img"}
                            />

                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__av3J
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? ("#" as const)
                                  : `/store`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Store"
                                : "Store"}
                            </a>
                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__skwD3
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? ("#" as const)
                                  : `/about`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "About"
                                : "About"}
                            </a>
                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__ioabj
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? ("#" as const)
                                  : `/faq`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Faq"
                                : "Faq"}
                            </a>
                          </p.Stack>
                        ) : null}
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hl4Ao
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bzVwQ
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Â© Company. All rights reserved. This site proudly built with "
                              : "Â© Company. All rights reserved. This site proudly built with "}
                          </div>
                          <a
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__elNcj
                            )}
                            href={
                              hasVariant(globalVariants, "screen", "mobile")
                                ? ("https://www.plasmic.app/" as const)
                                : ("https://www.plasmic.app/" as const)
                            }
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Plasmic"
                              : "Plasmic"}
                          </a>
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                ) : null}
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground2",
    "header",
    "featureItem",
    "bigPlants",
    "cactuses",
    "menuButton"
  ],
  foreground2: ["foreground2"],
  header: ["header", "featureItem"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  menuButton: ["menuButton"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground2: "div";
  header: "div";
  featureItem: typeof FeatureItem;
  bigPlants: "div";
  cactuses: "div";
  menuButton: typeof MenuButton;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFaq__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFaq__VariantsArgs;
    args?: PlasmicFaq__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFaq__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicFaq__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFaq__ArgProps,
          internalVariantPropNames: PlasmicFaq__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFaq__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFaq";
  } else {
    func.displayName = `PlasmicFaq.${nodeName}`;
  }
  return func;
}

export const PlasmicFaq = Object.assign(
  // Top-level PlasmicFaq renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    header: makeNodeComponent("header"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    menuButton: makeNodeComponent("menuButton"),

    // Metadata about props expected for PlasmicFaq
    internalVariantProps: PlasmicFaq__VariantProps,
    internalArgProps: PlasmicFaq__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFaq;
/* prettier-ignore-end */
